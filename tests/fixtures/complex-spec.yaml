openapi: 3.0.0
info:
  title: Complex Test API
  version: 2.0.0
  description: More complex API for testing advanced features
servers:
  - url: https://api.example.com/v2
    description: Production server
  - url: https://staging.api.example.com/v2
    description: Staging server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
  parameters:
    limitParam:
      name: limit
      in: query
      description: Number of items to return
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
  schemas:
    User:
      type: object
      required:
        - id
        - username
        - email
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
          minLength: 3
          maxLength: 50
        email:
          type: string
          format: email
        role:
          type: string
          enum: [user, admin, moderator]
paths:
  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: include
          in: query
          description: Include additional data
          schema:
            type: array
            items:
              type: string
              enum: [profile, preferences]
          style: form
          explode: false
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '401':
          description: Unauthorized
    put:
      summary: Update user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Updated
        '403':
          description: Forbidden
    delete:
      summary: Delete user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: [admin]
      responses:
        '204':
          description: Deleted
        '403':
          description: Forbidden
  /users:
    get:
      summary: List users with filtering
      parameters:
        - $ref: '#/components/parameters/limitParam'
        - name: role
          in: query
          schema:
            type: string
            enum: [user, admin, moderator]
        - name: search
          in: query
          description: Search term
          schema:
            type: string
            minLength: 2
      security:
        - apiKey: []
      responses:
        '200':
          description: Users list
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                      page:
                        type: integer
  /admin/stats:
    get:
      summary: Admin statistics
      security:
        - bearerAuth: [admin]
      responses:
        '200':
          description: Statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_users:
                    type: integer
                  active_users:
                    type: integer
        '403':
          description: Admin access required
  /search:
    get:
      summary: Search endpoint (potentially vulnerable)
      parameters:
        - name: q
          in: query
          required: true
          description: Search query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Search results
        '400':
          description: Invalid query